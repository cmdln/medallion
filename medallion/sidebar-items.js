initSidebarItems({"enum":[["Algorithm","Supported algorithms, each representing a valid signature and digest combination."]],"struct":[["Header","An extensible Header that provides only algorithm field and allows for additional fields to be passed in via a struct that can be serialized and deserialized. Unlike the Claims struct, there is no convenience type alias because headers seem to vary much more greatly in practice depending on the application whereas claims seem to be shared as a function of registerest and public claims."],["Payload","A default claim set, including the standard, or registered, claims and the ability to specify your own as custom claims."],["Token","Main struct representing a JSON Web Token, composed of a header and a set of claims."]],"type":[["DefaultPayload","A convenient type alias that assumes the standard claims are sufficient, the empty tuple type satisfies Claims' generic parameter as simply and clearly as possible."],["DefaultToken","A convenient type that binds the same type parameter for the custom claims, an empty tuple, as `DefaultPayload` so that the two aliases may be used together to reduce boilerplate when no custom claims are needed."],["Result",""]]});